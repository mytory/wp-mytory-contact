.o-layout {
    display: block;
    /* [1] */
    margin: 0;
    /* [2] */
    padding: 0;
    /* [2] */
    list-style: none;
    /* [1] */
    margin-left: -29px;
    /* [3] */
    font-size: 0;
}

/**
 * 1. Allows us to manipulate grids vertically, with text-level properties,
 *    etc.
 * 2. Default item alignment is with the tops of each other, like most
 *    traditional grid/layout systems.
 * 3. By default, all layout items are full-width (mobile first).
 * 4. Gutters provided by left padding:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */

.o-layout__item {
    display: inline-block;
    /* [1] */
    vertical-align: top;
    /* [2] */
    width: 100%;
    /* [3] */
    padding-left: 29px;
    /* [4] */
    font-size: 18px;
    font-size: 1rem;
}

/* Gutter size modifiers.
   ========================================================================== */

/**
 * Tiny gutters between items.
 */

.o-layout--tiny {
    margin-left: -7px;
}

.o-layout--tiny > .o-layout__item {
    padding-left: 7px;
}

/**
 * Small gutters between items.
 */

.o-layout--small {
    margin-left: -15px;
}

.o-layout--small > .o-layout__item {
    padding-left: 15px;
}

/**
 * Large gutters between items.
 */

.o-layout--large {
    margin-left: -58px;
}

.o-layout--large > .o-layout__item {
    padding-left: 58px;
}

/**
 * Huge gutters between items.
 */

.o-layout--huge {
    margin-left: -116px;
}

.o-layout--huge > .o-layout__item {
    padding-left: 116px;
}

/**
 * No gutters between items.
 */

.o-layout--flush {
    margin-left: 0;
}

.o-layout--flush > .o-layout__item {
    padding-left: 0;
}

/* Vertical alignment modifiers.
   ========================================================================== */

/**
 * Align all grid items to the middles of each other.
 *
 * Input:
 *
 *   1 2 3 4 5
 *   1 2 - 4 5
 *   1 2 - 4 5
 *   - 2 - - 5
 *   - 2 - - 5
 *
 * Output:
 *
 *   - 2 - - 5
 *   1 2 - 4 5
 *   1 2 3 4 5
 *   1 2 - 4 5
 *   - 2 - - 5
 */

.o-layout--middle > .o-layout__item {
    vertical-align: middle;
}

/**
 * Align all grid items to the bottoms of each other.
 *
 * Input:
 *
 *   1 2 3 4 5
 *   1 2 - 4 5
 *   1 2 - 4 5
 *   - 2 - - 5
 *   - 2 - - 5
 *
 * Output:
 *
 *   - 2 - - 5
 *   - 2 - - 5
 *   1 2 - 4 5
 *   1 2 - 4 5
 *   1 2 3 4 5
 */

.o-layout--bottom > .o-layout__item {
    vertical-align: bottom;
}

/* Fill order modifiers.
   ========================================================================== */

/**
 * Fill up the layout system from the centre.
 *
 * Input:
 *
 *   1 2 3 - -
 *
 * Output:
 *
 *   - 1 2 3 -
 */

.o-layout--center {
    text-align: center;
}

.o-layout--center > .o-layout__item {
    text-align: left;
}

/**
 * Fill up the layout system from the right-hand side.
 *
 * Input:
 *
 *   1 2 3 - -
 *
 * Output:
 *
 *   - - 1 2 3
 */

.o-layout--right {
    text-align: right;
}

.o-layout--right > .o-layout__item {
    text-align: left;
}

/**
 * Reverse the rendered order of the grid system.
 *
 * Input:
 *
 *   1 2 3 4 5
 *
 * Output:
 *
 *   5 4 3 2 1
 */

.o-layout--reverse {
    direction: rtl;
}

.o-layout--reverse > .o-layout__item {
    direction: ltr;
    text-align: left;
}

.mcg-card {
    margin: 0;
    padding: 0;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 1em;
}

.mcg-card__item {
    list-style: none;
    background-color: #fff;
    box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.2);
    padding: 3em 1em;
    margin: 0;
    text-align: center;
    position: relative;
    color: black;
    text-decoration: none;
    cursor: pointer;
    border: none;
    -webkit-appearance: none;
}

.mcg-card__item:hover {
    box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.4);
}

.mcg-card__name {
    font-size: 1.1rem;
    font-weight: bold;
}

.mcg-card__tag {
    position: absolute;
    right: 1em;
    top: 1em;
    color: #aaa;
}

@media screen and (min-width: 600px) {
    .mcg-card {
        grid-template-columns: 1fr 1fr 1fr;
    }
}

@media screen and (min-width: 980px) {
    .mcg-card {
        grid-template-columns: 1fr 1fr 1fr 1fr;
    }
}

@media screen and (min-width: 1280px) {
    .mcg-card {
        grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
    }
}

.modal-mask {
    position: fixed;
    z-index: 9998;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, .5);
    display: table;
    transition: opacity .3s ease;
}

.modal-wrapper {
    display: table-cell;
    vertical-align: middle;
}

.modal-container {
    box-sizing: border-box;
    position: relative;
    width: 90vw;
    max-width: 40rem;
    max-height: 90vh;
    overflow: auto;
    margin: 0 auto;
    background-color: #fff;
    border-top: 2px solid black;
    border-radius: 2px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, .33);
    transition: all .3s ease;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
}

.modal-header {
    box-sizing: border-box;
    width: 90vw;
    max-width: 40rem;
    padding: 1em 2em;
    position: fixed;
    background-color: #eee;
    color: white;
    border-radius: 2px 2px 0 0;
}

.modal-body {
    padding: 5em 2em 2em 2em;
}

.modal-body img {
    display: block;
    max-width: 100%;
    height: auto;
}

@media screen and (max-width: 600px) {
    .modal-body {
        padding: 1em;
    }
}

.modal-default-button {
    float: right;
}

/*
 * The following styles are auto-applied to elements with
 * transition="modal" when their visibility is toggled
 * by Vue.js.
 *
 * You can easily play with the modal transition by editing
 * these styles.
 */

.modal-enter {
    opacity: 0;
}

.modal-leave-active {
    opacity: 0;
}

.modal-enter .modal-container,
.modal-leave-active .modal-container {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
}

.c-close {
    float: right;
    font-size: 27px;
    font-weight: normal;
    line-height: 1;
    color: #000;
    text-shadow: 0 1px 0 #fff;
    opacity: 0.5;
    filter: alpha(opacity=50);
}

.c-close:hover,
.c-close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
    opacity: 0.9;
    filter: alpha(opacity=90);
}

.c-close--absolute {
    float: none;
    position: absolute;
    right: 15px;
    top: 15px;
}

button.c-close {
    padding: 0;
    cursor: pointer;
    background: transparent;
    border: 0;
    -webkit-appearance: none;
}

/* ==========================================================================
 * * #WIDTHS
 * * ========================================================================== */

/**
 * * A series of width helper classes that you can use to size things like grid
 * * systems. Classes can take a fraction-like format (e.g. `.u-2/3`) or a spoken-
 * * word format (e.g. `.u-2-of-3`). Use these in your markup:
 * *
 * * <div class="u-7/12">
 * *
 * * The following will generate a 12 and a 16 column grid system. */

.u-1\/12 {
    width: 8.3333333333% !important;
    max-width: 8.3333333333% !important;
    flex-basis: 8.3333333333% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-2\/12 {
    width: 16.6666666667% !important;
    max-width: 16.6666666667% !important;
    flex-basis: 16.6666666667% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-3\/12 {
    width: 25% !important;
    max-width: 25% !important;
    flex-basis: 25% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-4\/12 {
    width: 33.3333333333% !important;
    max-width: 33.3333333333% !important;
    flex-basis: 33.3333333333% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-5\/12 {
    width: 41.6666666667% !important;
    max-width: 41.6666666667% !important;
    flex-basis: 41.6666666667% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-6\/12 {
    width: 50% !important;
    max-width: 50% !important;
    flex-basis: 50% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-7\/12 {
    width: 58.3333333333% !important;
    max-width: 58.3333333333% !important;
    flex-basis: 58.3333333333% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-8\/12 {
    width: 66.6666666667% !important;
    max-width: 66.6666666667% !important;
    flex-basis: 66.6666666667% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-9\/12 {
    width: 75% !important;
    max-width: 75% !important;
    flex-basis: 75% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-10\/12 {
    width: 83.3333333333% !important;
    max-width: 83.3333333333% !important;
    flex-basis: 83.3333333333% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-11\/12 {
    width: 91.6666666667% !important;
    max-width: 91.6666666667% !important;
    flex-basis: 91.6666666667% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

.u-12\/12 {
    width: 100% !important;
    max-width: 100% !important;
    flex-basis: 100% !important;
}

/**
 * 1. Defensively reset any leftover or conflicting `left`/`right` values.
 */

/**
 * * Create a 12 and a 16 column grid system on screens over 1200px wide, and give
 * * them a Responsive Suffix of `@lg`, e.g.:
 * *
 * * <div class="u-3/12@lg"> */

@media screen and (max-width: 1280px) {
    .u-1\/12\@wide {
        width: 8.3333333333% !important;
        max-width: 8.3333333333% !important;
        flex-basis: 8.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-2\/12\@wide {
        width: 16.6666666667% !important;
        max-width: 16.6666666667% !important;
        flex-basis: 16.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-3\/12\@wide {
        width: 25% !important;
        max-width: 25% !important;
        flex-basis: 25% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-4\/12\@wide {
        width: 33.3333333333% !important;
        max-width: 33.3333333333% !important;
        flex-basis: 33.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-5\/12\@wide {
        width: 41.6666666667% !important;
        max-width: 41.6666666667% !important;
        flex-basis: 41.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-6\/12\@wide {
        width: 50% !important;
        max-width: 50% !important;
        flex-basis: 50% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-7\/12\@wide {
        width: 58.3333333333% !important;
        max-width: 58.3333333333% !important;
        flex-basis: 58.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-8\/12\@wide {
        width: 66.6666666667% !important;
        max-width: 66.6666666667% !important;
        flex-basis: 66.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-9\/12\@wide {
        width: 75% !important;
        max-width: 75% !important;
        flex-basis: 75% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-10\/12\@wide {
        width: 83.3333333333% !important;
        max-width: 83.3333333333% !important;
        flex-basis: 83.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-11\/12\@wide {
        width: 91.6666666667% !important;
        max-width: 91.6666666667% !important;
        flex-basis: 91.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-12\/12\@wide {
        width: 100% !important;
        max-width: 100% !important;
        flex-basis: 100% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
}

@media screen and (max-width: 1000px) {
    .u-1\/12\@xlg {
        width: 8.3333333333% !important;
        max-width: 8.3333333333% !important;
        flex-basis: 8.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-2\/12\@xlg {
        width: 16.6666666667% !important;
        max-width: 16.6666666667% !important;
        flex-basis: 16.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-3\/12\@xlg {
        width: 25% !important;
        max-width: 25% !important;
        flex-basis: 25% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-4\/12\@xlg {
        width: 33.3333333333% !important;
        max-width: 33.3333333333% !important;
        flex-basis: 33.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-5\/12\@xlg {
        width: 41.6666666667% !important;
        max-width: 41.6666666667% !important;
        flex-basis: 41.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-6\/12\@xlg {
        width: 50% !important;
        max-width: 50% !important;
        flex-basis: 50% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-7\/12\@xlg {
        width: 58.3333333333% !important;
        max-width: 58.3333333333% !important;
        flex-basis: 58.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-8\/12\@xlg {
        width: 66.6666666667% !important;
        max-width: 66.6666666667% !important;
        flex-basis: 66.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-9\/12\@xlg {
        width: 75% !important;
        max-width: 75% !important;
        flex-basis: 75% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-10\/12\@xlg {
        width: 83.3333333333% !important;
        max-width: 83.3333333333% !important;
        flex-basis: 83.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-11\/12\@xlg {
        width: 91.6666666667% !important;
        max-width: 91.6666666667% !important;
        flex-basis: 91.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-12\/12\@xlg {
        width: 100% !important;
        max-width: 100% !important;
        flex-basis: 100% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
}

@media screen and (max-width: 850px) {
    .u-1\/12\@lg {
        width: 8.3333333333% !important;
        max-width: 8.3333333333% !important;
        flex-basis: 8.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-2\/12\@lg {
        width: 16.6666666667% !important;
        max-width: 16.6666666667% !important;
        flex-basis: 16.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-3\/12\@lg {
        width: 25% !important;
        max-width: 25% !important;
        flex-basis: 25% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-4\/12\@lg {
        width: 33.3333333333% !important;
        max-width: 33.3333333333% !important;
        flex-basis: 33.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-5\/12\@lg {
        width: 41.6666666667% !important;
        max-width: 41.6666666667% !important;
        flex-basis: 41.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-6\/12\@lg {
        width: 50% !important;
        max-width: 50% !important;
        flex-basis: 50% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-7\/12\@lg {
        width: 58.3333333333% !important;
        max-width: 58.3333333333% !important;
        flex-basis: 58.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-8\/12\@lg {
        width: 66.6666666667% !important;
        max-width: 66.6666666667% !important;
        flex-basis: 66.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-9\/12\@lg {
        width: 75% !important;
        max-width: 75% !important;
        flex-basis: 75% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-10\/12\@lg {
        width: 83.3333333333% !important;
        max-width: 83.3333333333% !important;
        flex-basis: 83.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-11\/12\@lg {
        width: 91.6666666667% !important;
        max-width: 91.6666666667% !important;
        flex-basis: 91.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-12\/12\@lg {
        width: 100% !important;
        max-width: 100% !important;
        flex-basis: 100% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
}

@media screen and (max-width: 600px) {
    .u-1\/12\@md {
        width: 8.3333333333% !important;
        max-width: 8.3333333333% !important;
        flex-basis: 8.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-2\/12\@md {
        width: 16.6666666667% !important;
        max-width: 16.6666666667% !important;
        flex-basis: 16.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-3\/12\@md {
        width: 25% !important;
        max-width: 25% !important;
        flex-basis: 25% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-4\/12\@md {
        width: 33.3333333333% !important;
        max-width: 33.3333333333% !important;
        flex-basis: 33.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-5\/12\@md {
        width: 41.6666666667% !important;
        max-width: 41.6666666667% !important;
        flex-basis: 41.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-6\/12\@md {
        width: 50% !important;
        max-width: 50% !important;
        flex-basis: 50% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-7\/12\@md {
        width: 58.3333333333% !important;
        max-width: 58.3333333333% !important;
        flex-basis: 58.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-8\/12\@md {
        width: 66.6666666667% !important;
        max-width: 66.6666666667% !important;
        flex-basis: 66.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-9\/12\@md {
        width: 75% !important;
        max-width: 75% !important;
        flex-basis: 75% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-10\/12\@md {
        width: 83.3333333333% !important;
        max-width: 83.3333333333% !important;
        flex-basis: 83.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-11\/12\@md {
        width: 91.6666666667% !important;
        max-width: 91.6666666667% !important;
        flex-basis: 91.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-12\/12\@md {
        width: 100% !important;
        max-width: 100% !important;
        flex-basis: 100% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
}

@media screen and (max-width: 450px) {
    .u-1\/12\@sm {
        width: 8.3333333333% !important;
        max-width: 8.3333333333% !important;
        flex-basis: 8.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-2\/12\@sm {
        width: 16.6666666667% !important;
        max-width: 16.6666666667% !important;
        flex-basis: 16.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-3\/12\@sm {
        width: 25% !important;
        max-width: 25% !important;
        flex-basis: 25% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-4\/12\@sm {
        width: 33.3333333333% !important;
        max-width: 33.3333333333% !important;
        flex-basis: 33.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-5\/12\@sm {
        width: 41.6666666667% !important;
        max-width: 41.6666666667% !important;
        flex-basis: 41.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-6\/12\@sm {
        width: 50% !important;
        max-width: 50% !important;
        flex-basis: 50% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-7\/12\@sm {
        width: 58.3333333333% !important;
        max-width: 58.3333333333% !important;
        flex-basis: 58.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-8\/12\@sm {
        width: 66.6666666667% !important;
        max-width: 66.6666666667% !important;
        flex-basis: 66.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-9\/12\@sm {
        width: 75% !important;
        max-width: 75% !important;
        flex-basis: 75% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-10\/12\@sm {
        width: 83.3333333333% !important;
        max-width: 83.3333333333% !important;
        flex-basis: 83.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-11\/12\@sm {
        width: 91.6666666667% !important;
        max-width: 91.6666666667% !important;
        flex-basis: 91.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-12\/12\@sm {
        width: 100% !important;
        max-width: 100% !important;
        flex-basis: 100% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
}

@media screen and (max-width: 320px) {
    .u-1\/12\@tiny {
        width: 8.3333333333% !important;
        max-width: 8.3333333333% !important;
        flex-basis: 8.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-2\/12\@tiny {
        width: 16.6666666667% !important;
        max-width: 16.6666666667% !important;
        flex-basis: 16.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-3\/12\@tiny {
        width: 25% !important;
        max-width: 25% !important;
        flex-basis: 25% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-4\/12\@tiny {
        width: 33.3333333333% !important;
        max-width: 33.3333333333% !important;
        flex-basis: 33.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-5\/12\@tiny {
        width: 41.6666666667% !important;
        max-width: 41.6666666667% !important;
        flex-basis: 41.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-6\/12\@tiny {
        width: 50% !important;
        max-width: 50% !important;
        flex-basis: 50% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-7\/12\@tiny {
        width: 58.3333333333% !important;
        max-width: 58.3333333333% !important;
        flex-basis: 58.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-8\/12\@tiny {
        width: 66.6666666667% !important;
        max-width: 66.6666666667% !important;
        flex-basis: 66.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-9\/12\@tiny {
        width: 75% !important;
        max-width: 75% !important;
        flex-basis: 75% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-10\/12\@tiny {
        width: 83.3333333333% !important;
        max-width: 83.3333333333% !important;
        flex-basis: 83.3333333333% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-11\/12\@tiny {
        width: 91.6666666667% !important;
        max-width: 91.6666666667% !important;
        flex-basis: 91.6666666667% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
    .u-12\/12\@tiny {
        width: 100% !important;
        max-width: 100% !important;
        flex-basis: 100% !important;
    }

    /**
     * 1. Defensively reset any leftover or conflicting `left`/`right` values.
     */
}

[v-cloak] {
    display: none;
}